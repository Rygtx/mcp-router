{
  "$schema": "https://unpkg.com/knip@5/schema.json",
  "workspaces": {
    ".": {
      "entry": [
        "*.config.{js,ts,mjs}",
        "turbo.json"
      ],
      "ignore": [
        "**/*.d.ts",
        "**/dist/**",
        "**/out/**",
        "**/.turbo/**",
        "**/.webpack/**",
        "**/coverage/**",
        "**/build/**",
        "**/.next/**",
        "**/node_modules/**",
        "**/*.min.js"
      ]
    },
    "apps/electron": {
      "entry": [
        "src/main.ts",
        "src/renderer.tsx",
        "src/preload.ts",
        "forge.config.ts",
        "webpack.main.config.ts",
        "webpack.renderer.config.ts",
        "webpack.plugins.ts",
        "webpack.rules.ts"
      ],
      "project": [
        "src/**/*.{ts,tsx,js,jsx}"
      ],
      "ignore": [
        "**/*.d.ts",
        "**/dist/**",
        "**/out/**",
        "**/.turbo/**",
        "**/.webpack/**",
        "**/coverage/**",
        "**/build/**",
        "**/node_modules/**",
        "**/*.min.js"
      ],
      "ignoreDependencies": [
        "@electron-forge/publisher-github",
        "@types/webpack",
        "@vercel/webpack-asset-relocator-loader",
        "css-loader",
        "html-webpack-plugin",
        "node-loader",
        "postcss-loader",
        "style-loader",
        "ts-loader",
        "ts-node"
      ],
      "ignoreExportsUsedInFile": {
        "src/frontend/components/**/*.tsx": ["default"],
        "src/main/**/*.ts": ["default"],
        "src/lib/**/*.ts": ["default"]
      }
    },
    "packages/shared": {
      "entry": [
      ],
      "project": [
        "src/**/*.ts"
      ],
      "ignore": [
        "**/*.d.ts",
        "**/dist/**",
        "**/.turbo/**",
        "**/node_modules/**",
        "**/*.test.ts",
        "**/*.spec.ts"
      ],
      "ignoreExportsUsedInFile": {
        "src/**/*.ts": ["default"]
      }
    },
    "packages/ui": {
      "entry": [
      ],
      "project": [
        "src/**/*.{ts,tsx}"
      ],
      "ignore": [
        "**/*.d.ts",
        "**/dist/**",
        "**/.turbo/**",
        "**/node_modules/**",
        "**/*.test.{ts,tsx}",
        "**/*.spec.{ts,tsx}",
        "**/*.stories.{ts,tsx}"
      ],
      "ignoreExportsUsedInFile": {
        "src/components/*.tsx": ["default"],
        "src/hooks/*.ts": ["default"],
        "src/lib/*.ts": ["default"]
      },
      "ignoreDependencies": []
    },
    "apps/cli": {
      "entry": [
        "src/mcp-aggregator.ts"
      ],
      "project": [
        "src/**/*.ts"
      ],
      "ignore": [
        "**/*.d.ts",
        "**/dist/**",
        "**/.turbo/**",
        "**/node_modules/**",
        "**/*.test.ts",
        "**/*.spec.ts"
      ],
      "ignoreExportsUsedInFile": {
        "src/**/*.ts": ["default"]
      }
    },
    "packages/remote-api-types": {
      "entry": [
      ],
      "project": [
        "src/**/*.ts"
      ],
      "ignore": [
        "**/*.d.ts",
        "**/dist/**",
        "**/.turbo/**",
        "**/node_modules/**",
        "**/*.test.ts",
        "**/*.spec.ts"
      ],
      "ignoreExportsUsedInFile": {
        "src/**/*.ts": ["default"]
      }
    },
    "packages/tailwind-config": {
      "entry": [
      ],
      "project": [
        "*.js"
      ],
      "ignore": [
        "**/node_modules/**",
        "**/.turbo/**",
        "**/*.test.js",
        "**/*.spec.js"
      ],
      "ignoreDependencies": []
    }
  },
  "ignore": [
    "**/*.d.ts",
    "**/dist/**",
    "**/out/**",
    "**/.turbo/**",
    "**/.webpack/**",
    "**/coverage/**",
    "**/build/**",
    "**/.next/**",
    "**/node_modules/**",
    "**/*.min.js",
    "**/*.test.{ts,tsx,js,jsx}",
    "**/*.spec.{ts,tsx,js,jsx}",
    "**/forge.config.ts",
    "**/*.map",
    "**/*.log",
    "**/tmp/**",
    "**/temp/**"
  ],
  "ignoreDependencies": [],
  "ignoreWorkspaces": [],
  "rules": {
    "dependencies": "error",
    "devDependencies": "error",
    "optionalPeerDependencies": "off",
    "unlisted": "error",
    "binaries": "error",
    "unresolved": "error",
    "exports": "error",
    "nsExports": "error",
    "classMembers": "error",
    "types": "error",
    "nsTypes": "error",
    "enumMembers": "error",
    "duplicates": "error"
  }
}
